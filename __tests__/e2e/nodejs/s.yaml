edition: 3.0.0
name: test-node-app
access: quanxi

vars: 
  region: ${env('REGION', 'cn-hongkong')}

resources:
  fcDemo: # 业务名称/模块名称
    component: ${env('fc_component_version', path('../../../'))}
    props: # 组件的属性值
      region: ${vars.region}
      functionName: fc3-event-${env('fc_component_function_name', 'nodejs18')}
      runtime: ${env('fc_component_runtime', 'nodejs18')}
      code: ./code
      handler: event.handler
      memorySize: 128
      timeout: 60
      instanceLifecycleConfig:
        initializer:
          handler: event.initializer
          timeout: 10
  
      asyncInvokeConfig:
        destinationConfig:
          onFailure:
            destination: acs:mns:${vars.region}::/topics/serverless-devs-fc3-ci-test/messages
          onSuccess:
            destination: acs:fc:${vars.region}::functions/serverless-devs-ci-async-invoke-config-succ
        maxAsyncEventAgeInSeconds: 360
        maxAsyncRetryAttempts: 1
        asyncTask: true
        qualifier: LATEST

      provisionConfig:
        target: 1
        alwaysAllocateCPU: false
        alwaysAllocateGPU: false
        scheduledActions:
          - name: scheduled-actions
            startTime: '2023-08-15T02:04:00.000Z'
            endTime: '2033-08-15T03:04:00.000Z'
            target: 1
            scheduleExpression: cron(0 0 4 * * *)
            timeZone: ''
        # targetTrackingPolicies:
        #   - name: target-tracking-policies
        #     startTime: '2023-08-15T02:05:00.000Z'
        #     endTime: '2033-08-15T02:55:00.000Z'
        #     metricType: ProvisionedConcurrencyUtilization
        #     metricTarget: 0.6
        #     minCapacity: 1
        #     maxCapacity: 3

      concurrencyConfig:
        reservedConcurrency: 1

      customDomain:
        domainName: auto
        protocol: HTTP
        route:
          path: /*
          qualifier: LATEST